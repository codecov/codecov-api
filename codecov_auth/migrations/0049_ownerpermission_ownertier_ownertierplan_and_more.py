# Generated by Django 4.2.7 on 2024-02-06 23:31

import uuid

import django.db.models.deletion
import django_prometheus.models
from django.db import migrations, models


class Migration(migrations.Migration):
    """
    BEGIN;
    --
    -- Create model OwnerPermission
    --
    CREATE TABLE "codecov_auth_ownerpermission" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "external_id" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "updated_at" timestamp with time zone NOT NULL, "name" varchar(100) NOT NULL UNIQUE);
    --
    -- Create model OwnerTier
    --
    CREATE TABLE "codecov_auth_ownertier" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "external_id" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "updated_at" timestamp with time zone NOT NULL, "name" varchar(100) NOT NULL UNIQUE);
    --
    -- Create model OwnerTierPlan
    --
    CREATE TABLE "codecov_auth_ownertierplan" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "external_id" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "updated_at" timestamp with time zone NOT NULL, "plan" text NOT NULL, "tier_id" bigint NOT NULL);
    --
    -- Create model OwnerTierPermission
    --
    CREATE TABLE "codecov_auth_ownertierpermission" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "external_id" uuid NOT NULL, "created_at" timestamp with time zone NOT NULL, "updated_at" timestamp with time zone NOT NULL, "permission_id" bigint NOT NULL, "tier_id" bigint NOT NULL);
    CREATE INDEX "codecov_auth_ownerpermission_name_0a5e4790_like" ON "codecov_auth_ownerpermission" ("name" varchar_pattern_ops);
    CREATE INDEX "codecov_auth_ownertier_name_a532ecf1_like" ON "codecov_auth_ownertier" ("name" varchar_pattern_ops);
    ALTER TABLE "codecov_auth_ownertierplan" ADD CONSTRAINT "codecov_auth_ownerti_tier_id_46ba5222_fk_codecov_a" FOREIGN KEY ("tier_id") REFERENCES "codecov_auth_ownerpermission" ("id") DEFERRABLE INITIALLY DEFERRED;
    CREATE INDEX "codecov_auth_ownertierplan_tier_id_46ba5222" ON "codecov_auth_ownertierplan" ("tier_id");
    ALTER TABLE "codecov_auth_ownertierpermission" ADD CONSTRAINT "codecov_auth_ownerti_permission_id_6ca68492_fk_codecov_a" FOREIGN KEY ("permission_id") REFERENCES "codecov_auth_ownerpermission" ("id") DEFERRABLE INITIALLY DEFERRED;
    ALTER TABLE "codecov_auth_ownertierpermission" ADD CONSTRAINT "codecov_auth_ownerti_tier_id_d682acb8_fk_codecov_a" FOREIGN KEY ("tier_id") REFERENCES "codecov_auth_ownerpermission" ("id") DEFERRABLE INITIALLY DEFERRED;
    CREATE INDEX "codecov_auth_ownertierpermission_permission_id_6ca68492" ON "codecov_auth_ownertierpermission" ("permission_id");
    CREATE INDEX "codecov_auth_ownertierpermission_tier_id_d682acb8" ON "codecov_auth_ownertierpermission" ("tier_id");
    COMMIT;
    """

    dependencies = [
        ("codecov_auth", "0048_githubappinstallation"),
    ]

    operations = [
        migrations.CreateModel(
            name="OwnerPermission",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("external_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "codecov_auth.owner_permission"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="OwnerTier",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("external_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "codecov_auth.owner_tier"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="OwnerTierPlan",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("external_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("plan", models.TextField()),
                (
                    "tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tier_plan",
                        to="codecov_auth.ownerpermission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "codecov_auth.owner_tier_plan"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="OwnerTierPermission",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("external_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission",
                        to="codecov_auth.ownerpermission",
                    ),
                ),
                (
                    "tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tier",
                        to="codecov_auth.ownerpermission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "codecov_auth.owner_tier_permission"
                ),
                models.Model,
            ),
        ),
    ]
