# syntax=docker/dockerfile:1.4
ARG PYTHON_IMAGE=ghcr.io/astral-sh/uv:python3.12-bookworm-slim

# BUILD STAGE - Download dependencies from GitHub that require SSH access
FROM $PYTHON_IMAGE as build

RUN apt-get update
RUN apt-get install -y \
    git \
    build-essential \
    libffi-dev \
    libpq-dev \
    curl

# Change the working directory to the `app` directory
WORKDIR /app

# Install dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project

# RUNTIME STAGE - Copy packages from build stage and install runtime dependencies
FROM $PYTHON_IMAGE

# Our postgres driver psycopg2 requires libpq-dev as a runtime dependency
RUN apt-get update
RUN apt-get install -y \
    git \
    libpq-dev \
    make \
    curl \
    libexpat1

WORKDIR /app
COPY --from=build /app /app

