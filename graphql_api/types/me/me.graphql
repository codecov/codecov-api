type Me {
  email: String
  businessEmail: String
  onboardingCompleted: Boolean!
  user: User!
  owner: Owner!
  sessions(
    first: Int
    after: String
    last: Int
    before: String
  ): SessionConnection! @cost(complexity: 7, multipliers: ["first", "last"])
  tokens(
    first: Int
    after: String
    last: Int
    before: String
  ): UserTokenConnection! @cost(complexity: 5, multipliers: ["first", "last"])
  viewableRepositories(
    filters: RepositorySetFilters
    ordering: RepositoryOrdering
    orderingDirection: OrderingDirection
    first: Int
    after: String
    last: Int
    before: String
  ): ViewableRepositoryConnection!
    @cost(complexity: 25, multipliers: ["first", "last"])
  myOrganizations(
    filters: OrganizationSetFilters
    first: Int
    after: String
    last: Int
    before: String
  ): MyOrganizationConnection!
    @cost(complexity: 15, multipliers: ["first", "last"])
  isSyncingWithGitProvider: Boolean!
  trackingMetadata: trackingMetadata! # temporary solution to expose the user metadata
  privateAccess: Boolean
  termsAgreement: Boolean
}

# Temporary type to gather the different attributes for tracking until we have
# a valid place in the graph for those attributes
type trackingMetadata {
  ownerid: Int!
  serviceId: String!
  plan: String
  staff: Boolean
  hasYaml: Boolean!
  service: String!
  bot: String
  delinquent: Boolean
  didTrial: Boolean
  planProvider: String
  planUserCount: Int
  createstamp: DateTime
  updatestamp: DateTime
  profile: Profile
}
