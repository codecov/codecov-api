type Owner {
  account: Account
  availablePlans: [PlanRepresentation!]
  avatarUrl: String!
  defaultOrgUsername: String
  delinquent: Boolean
  hashOwnerid: String
  hasPrivateRepos: Boolean
  isAdmin: Boolean
  isCurrentUserActivated: Boolean
  isCurrentUserPartOfOrg: Boolean!
  measurements(
    interval: MeasurementInterval!
    after: DateTime
    before: DateTime
    repos: [String!]
    isPublic: Boolean
  ): [Measurement!]
  invoices: [Invoice] @cost(complexity: 100)
  invoice(invoiceId: String!): Invoice
  isUserOktaAuthenticated: Boolean!
  isGithubRateLimited: Boolean
  numberOfUploads: Int
  orgUploadToken: String
  ownerid: Int
  plan: Plan
  pretrialPlan: PlanRepresentation
  repository(name: String!): RepositoryResult!
  repositories(
    filters: RepositorySetFilters
    ordering: RepositoryOrdering
    orderingDirection: OrderingDirection
    first: Int
    after: String
    last: Int
    before: String
  ): RepositoryConnection! @cost(complexity: 25, multipliers: ["first", "last"])
  username: String
  yaml: String
}
