# Generated by Django 4.1.7 on 2023-03-10 18:24

import django.contrib.postgres.indexes
import django.db.models.functions.text
from django.contrib.postgres.operations import BtreeGinExtension, TrigramExtension
from django.db import migrations, models
from shared.django_apps.migration_utils import RiskyAddIndex


class Migration(migrations.Migration):
    """
    BEGIN;
    --
    -- Creates extension pg_trgm
    --
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    --
    -- Creates extension btree_gin
    --
    CREATE EXTENSION IF NOT EXISTS "btree_gin";
    --
    -- Create index commits_repoid_commitid_short on F(repository), Substr(Lower(F(commitid)), Value(1), Value(7)) on model commit
    --
    CREATE INDEX "commits_repoid_commitid_short" ON "commits" ("repoid", (SUBSTRING(LOWER("commitid"), 1, 7)));
    --
    -- Create index commit_message_gin_trgm on F(repository), OpClass(Upper(F(message)), name=gin_trgm_ops) on model commit
    --
    CREATE INDEX "commit_message_gin_trgm" ON "commits" USING gin ("repoid", (UPPER("message")) gin_trgm_ops);
    COMMIT;
    """

    dependencies = [
        ("core", "0019_commit_commits_repoid_branch_state_ts"),
    ]

    operations = [
        TrigramExtension(),
        BtreeGinExtension(),
        RiskyAddIndex(
            model_name="commit",
            index=models.Index(
                models.F("repository"),
                django.db.models.functions.text.Substr(
                    django.db.models.functions.text.Lower("commitid"), 1, 7
                ),
                name="commits_repoid_commitid_short",
            ),
        ),
        RiskyAddIndex(
            model_name="commit",
            index=django.contrib.postgres.indexes.GinIndex(
                models.F("repository"),
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("message"),
                    name="gin_trgm_ops",
                ),
                name="commit_message_gin_trgm",
            ),
        ),
    ]
